@import "../../theme/variables";

//Gradient
@mixin gradient($colorFrom, $colorTo) {
  /* Old browsers */
  background: $colorFrom;
  /* FF3.6-15 */
  background: -moz-radial-gradient(center, ellipse cover, $colorFrom 0%, $colorTo 100%, $colorTo 100%);
  /* Chrome10-25,Safari5.1-6 */
  background: -webkit-radial-gradient(center, ellipse cover, $colorFrom 0%, $colorTo 100%, $colorTo 100%);
  /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
  background: radial-gradient(ellipse at center, $colorFrom 0%, $colorTo 100%, $colorTo 100%);
  /* IE6-9 fallback on horizontal gradient */
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='$colorFrom', endColorstr='$colorTo', GradientType=1);
}

@mixin shadow() {
  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);
}

// BREAKPOINTS
$breakpoints: (max: (xs: 767px), min: (sm: 768px, md: 992px, lg: 1200px));
@mixin breakpoint($breakpoint, $break: null) {
  @if $break != null {
    $mediaVal: $breakpoint;

    @each $type, $value in $breakpoints {
      @if map-has-key($value, $breakpoint) {
        $mediaVal: map-get($value, $breakpoint);
      }
    }

    @media screen and (#{$break}-width: #{$mediaVal}) {
      @content;
    }
  } @else {
    @each $type, $value in $breakpoints {
      @if map-has-key($value, $breakpoint) {
        @media screen and (#{$type}-width: #{map-get($value, $breakpoint)}) {
          @content;
        }
      }
    }
  }
}

@mixin inputPlaceholder() {
  ::-webkit-input-placeholder { /* Chrome/Opera/Safari */
    @content;
  }
  ::-moz-placeholder { /* Firefox 19+ */
    @content;
  }
  :-ms-input-placeholder { /* IE 10+ */
    @content;
  }
  :-moz-placeholder { /* Firefox 18- */
    @content;
  }
}

@mixin text-overflow() {
  white-space: nowrap;
  text-overflow: ellipsis;
  width: 100%;
  overflow: hidden;
}

@mixin transitions($property: all, $time:.6s, $easing: ease) {
  transition: $property $time $easing;
}

@function lineHeight($fontSize, $lineHeight) {
  @return #{$fontSize}/#{$lineHeight};
}

@function load-image($image) {
  @return "#{$img-path}#{$image}";
}

@function rem($num) {
  @return #{$num / $rootSize}rem;
}

@mixin cardsListResponsiveStyle() {
  @media (max-width: 767px) {
    .line-padding {
      color: #000;

      strong {
        font-size: 1.4rem !important;
      }

      h2 {
        font-weight: bold;
      }
    }
  }

  /* 
    # Device = Tablets, Ipads (portrait)
    # Screen = B/w 768px to 1024px
  */
  @media (min-width: 768px) and (max-width: 1024px) {
    ion-item-divider {
      color: $greyItemDivider !important;
    }
  
    .bg-grey {
      background: #FAFAFA;
    }
    
    h4 {
      font-weight: 700;
      font-size: 16px;
    }
  
    .product-list {
      h2 {
        @include text-overflow();
      }
    }

    strong {
      font-size: 1.4rem !important;
    }

    .line-padding {
      color: #000;

      p {
        font-size: 18px;
      }
      h3 {
        font-size: 24px;
      }
      span, .status-box span {
        font-size: 18px;
      }
      h4 {
        font-size: 20px;
      }
      h2 {
        font-size: 25px;
        font-weight: 700;
        font-weight: bold;
      }
    }
  }

  /* 
    # Device = Tablets, Ipads (landscape)
    # Screen = B/w 768px to 1024px
  */
  @media (min-width: 768px) and (max-width: 1024px) and (orientation: landscape) {
    .line-padding {
      color: #000;

      strong {
        font-size: 1.4rem !important;
      }

      p {
        font-size: 18px;
      }
      h3 {
        font-size: 24px;
      }
      span, .status-box span {
        font-size: 18px;
      }
      h4 {
        font-size: 20px;
      }
      h2 {
        font-size: 30px;
        font-weight: 700;
        font-weight: bold;
      }
    }
  }
}

@mixin ionItemStyle() {
  @media (max-width: 767px) { 
    strong {
      font-size: 0.8em !important;
    }
  }
  
  /* 
    # Device = Tablets, Ipads (portrait)
    # Screen = B/w 768px to 1024px
  */
  @media (min-width: 768px) and (max-width: 1024px) {
    strong {
      font-size: 1.4rem !important;
    }

    ion-item {  
      h4 {
        font-size: 20px !important;
      }
    }
  }

   /* 
    # Device = Tablets, Ipads (landscape)
    # Screen = B/w 768px to 1024px
  */
  @media (min-width: 768px) and (max-width: 1024px) and (orientation: landscape) { 
    strong {
      font-size: 1.4rem !important;
    }
    
    ion-item {  
      h4 {
        font-size: 20px !important;
      }
    }
  }
}

@mixin load-mask-image($image, $bgColor: #000) {
  mask-image: url($image);
  mask-size: contain;
  mask-repeat: no-repeat;
  -webkit-mask-image: url($image);
  -webkit-mask-size: contain;
  -webkit-mask-repeat: no-repeat;
  background-color: $bgColor;
}